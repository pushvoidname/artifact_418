{
  "Object": "util",
  "API_Name": "printd",
  "API_Type": "Method",
  "API_Description": "",
  "Version": "3.01",
  "Save-Prefs": "No",
  "Security": "No",
  "Product": "All",
  "Parameters": {
    "cFormat": {
      "description": "The date and time format. It can be one of the following types:  -  A string that is a pattern of supported substrings that are place-holders for date and time data. Recognized date and time strings are shown in the table below. -  Beginning with Acrobat 5.0, a number specifying the format. Supported values (along with examples of each format) are:"
    },
    "oDate": {
      "description": "A Date object to format. Date objects can be obtained from the Date constructor of core JavaScript or from the util.scand method."
    },
    "bXFAPicture": {
      "description": "(optional, Acrobat 7.0) A Boolean value specifying whether the value of cFormat is interpreted using the XFA Picture Clause format, which gives extensive support for localized times and dates. See the sections on date and time pictures in XFA Specification. The default is false."
    }
  },
  "Returns": "The formatted date string.",
  "Examples": [
    "D:20000801145605+07\u201900\u2019\n1: Universal. Example: D:20000801145605+07\u201900\u2019\n2: Localized string. Example: 2000/08/01 14:56:05  -  Beginning with Acrobat 7.0, if bXFAPicture is true, this parameter is interpreted using the XFA Picture Clause format.\noDate | A Date object to format. Date objects can be obtained from the Date constructor of core JavaScript or from the util.scand method.\nbXFAPicture | (optional, Acrobat 7.0) A Boolean value specifying whether the value of cFormat is interpreted using the XFA Picture Clause format, which gives extensive support for localized times and dates. See the sections on date and time pictures in XFA Specification. The default is false.\n\n**Returns**\n\nThe formatted date string.\n\n**cFormat String Patterns**\n\nString | Effect | Example\n-------------------------\nmmmm | Long month | September\nmmm | Abbreviated month | Sep\nmm | Numeric month with leading zero | 09\nm | Numeric month without leading zero | 9\ndddd | Long day | Wednesday\nddd | Abbreviated day | Wed\ndd | Numeric date with leading zero | 03\nd | Numeric date without leading zero | 3\nyyyy | Long year | 1997\nyy | Abbreviated Year | 97\nHH | 24 hour time with leading zero | 09\nH | 24 hour time without leading zero | 9\nhh | 12 hour time with leading zero | 09\nh | 12 hour time without leading zero | 9\nMM | minutes with leading zero | 08\nM | minutes without leading zero | 8\nss | seconds with leading zero | 05\ns | seconds without leading zero | 5\ntt | am/pm indication | am\nt | single digit am/pm indication | a\nj | Japanese Emperor Year (abbreviated)  -  Introduced in Acrobat 6.0. In Acrobat 7.0, this format string has been deprecated in favor of the XFA Picture Clause format. | \njj | Japanese Emperor Year  -  Introduced in Acrobat 6.0. In Acrobat 7.0, this format string has been deprecated in favor of the XFA Picture Clause format. | \n | se as an escape character |",
    "Format the current date in long format:\n\n```\nvar d = new Date();\nconsole.println(\"Today is \" + util.printd(\"mmmm dd, yyyy\", d));\n```\n\n**Example 2 (Acrobat 5.0)**\n\nDisplay the date in a local format\n\n```\nconsole.println(util.printd(2, new Date() ));\n```\n\n**Example 3 (Acrobat 7.0)**\n\nUse the XFA-Picture Clause to write the current date to the console.\n\n```\n// Execute in console\nconsole.println(\n    util.printd(\"EEE, 'the' D 'of' MMMM, YYYY\", new Date(), true));\n// The output on this day is\nTue, the 13 of July, 2004\n```\n\nLocale-Sensitive Picture Clauses. Normally processing of picture clauses occurs in the ambient locale. It is possible, however, to indicate that picture processing be done in a specific locale. This is of use when formatting or parsing data that is locale-specific and different from the ambient locale. The syntax for this extension to compound picture clauses is:\n\n```\ncategory-name(locale-name){picture-symbols}\n```\n\nThe code executed in the console,\n\n```\nutil.printd(\"date(fr){DD MMMM, YYYY}\", new Date(), true)\n```\n\nyields the output on this day,\n\n```\n13 juillet, 2004\n```\n\nThe XFA-Picture Clause gives extensive support for Chinese, Chinese (Taiwan), Japanese, and Korean (CCJK) times and dates. The example below, a custom format script of a text field, gives the current date formatted for a Japanese locale.\n\n```\nevent.value = util.printd(\"date(ja){ggYY/M/D}\", new Date(), true)\n```"
  ],
  "cFormat String Patterns": "String | Effect | Example\n-------------------------\nmmmm | Long month | September\nmmm | Abbreviated month | Sep\nmm | Numeric month with leading zero | 09\nm | Numeric month without leading zero | 9\ndddd | Long day | Wednesday\nddd | Abbreviated day | Wed\ndd | Numeric date with leading zero | 03\nd | Numeric date without leading zero | 3\nyyyy | Long year | 1997\nyy | Abbreviated Year | 97\nHH | 24 hour time with leading zero | 09\nH | 24 hour time without leading zero | 9\nhh | 12 hour time with leading zero | 09\nh | 12 hour time without leading zero | 9\nMM | minutes with leading zero | 08\nM | minutes without leading zero | 8\nss | seconds with leading zero | 05\ns | seconds without leading zero | 5\ntt | am/pm indication | am\nt | single digit am/pm indication | a\nj | Japanese Emperor Year (abbreviated)  -  Introduced in Acrobat 6.0. In Acrobat 7.0, this format string has been deprecated in favor of the XFA Picture Clause format. | \njj | Japanese Emperor Year  -  Introduced in Acrobat 6.0. In Acrobat 7.0, this format string has been deprecated in favor of the XFA Picture Clause format. | \n | se as an escape character |",
  "Example 2 (Acrobat 5.0)": "Display the date in a local format\n\n```\nconsole.println(util.printd(2, new Date() ));\n```",
  "Example 3 (Acrobat 7.0)": "Use the XFA-Picture Clause to write the current date to the console.\n\n```\n// Execute in console\nconsole.println(\n    util.printd(\"EEE, 'the' D 'of' MMMM, YYYY\", new Date(), true));\n// The output on this day is\nTue, the 13 of July, 2004\n```\n\nLocale-Sensitive Picture Clauses. Normally processing of picture clauses occurs in the ambient locale. It is possible, however, to indicate that picture processing be done in a specific locale. This is of use when formatting or parsing data that is locale-specific and different from the ambient locale. The syntax for this extension to compound picture clauses is:\n\n```\ncategory-name(locale-name){picture-symbols}\n```\n\nThe code executed in the console,\n\n```\nutil.printd(\"date(fr){DD MMMM, YYYY}\", new Date(), true)\n```\n\nyields the output on this day,\n\n```\n13 juillet, 2004\n```\n\nThe XFA-Picture Clause gives extensive support for Chinese, Chinese (Taiwan), Japanese, and Korean (CCJK) times and dates. The example below, a custom format script of a text field, gives the current date formatted for a Japanese locale.\n\n```\nevent.value = util.printd(\"date(ja){ggYY/M/D}\", new Date(), true)\n```"
}