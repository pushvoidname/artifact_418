{
  "Object": "Doc",
  "API_Name": "getLegalWarnings",
  "API_Type": "Method",
  "API_Description": "",
  "Version": "6.0",
  "Save-Prefs": "No",
  "Security": "No",
  "Product": "All",
  "Parameters": {
    "bExecute": {
      "description": "if true, will cause the file to be examined and all detected warnings will be returned. In Acrobat 8, this examination is done by running a PDF/SigQ conformance check. If false, the default value, the warnings that have been embedded in the file, along with the certifier\u2019s attestation (if any) will be returned.   In Acrobat 6 and 7, legal warnings can be embedded in a file at the time of certifying (using cLegalAttest of the Field object method signatureSign ). In Acrobat 8, the certifier may still embed an attestation, but not the warning themselves. To obtain this attestation, call this method with bExecute=false."
    }
  },
  "Returns": "A DocLegalWarning object containing property names and values of legal warnings. The value of each entry is the number of occurrences of this warning in the document. If `bExecute` is `false` , refer to PDF Reference for a list of possible property names. If `bExecute` is `true` , the property names correspond to PDF/SigQ level A violations listed below. Note that the warnings listed in PDF Reference intersects but significantly differ from the list below.",
  "Examples": [
    "Process a document and get legal PDF warnings.\n\n```\nvar w = this.getLegalWarnings( true );\nconsole.println( \"Actual Legal PDF Warnings:\" );\nfor(i in w) console.println( i + \" = \" + w[i] );\n\nvar w1 = this.getLegalWarnings( false );\nconsole.println( \"Declared Legal PDF Warnings:\" );\nfor(i in w1) console.println( i + \" = \" + w1[i] );\n\n// For a certification signature, note also if annotations are\n// allowed by MDP settings\n\nvar f = this.getField( \"AuthorSig\" );\nvar s = f.signatureInfo();\nif( s.mdp == \"defaultAndComments\" )\n    console.println( \"Annotations are allowed\" );\n\n// What does the author have to say about all this?\n\nconsole.println( \"Legal PDF Attestation:\" );\nconsole.println( w1.Attestation );\n```"
  ],
  "DocLegalWarning object": "The following properties describe the PDF/SigQ1-A Violations.\n\nProperty | Description\n----------------------\nAlternateImages | Image XObject must not contain an alternate version.\nAnnotations | The document contains comments. The visual appearances of the comments may change based on external variables.\nCatalogHasAA | The document contains hidden actions that may not be intended or known by the end user. Actions include JavaScript actions (document open, save, etc.), playing multimedia, executing a menu item, and so on.\nCatalogHasOpenAction | The document contains hidden actions that will be launched on open. These actions may not be intended or known by the end user. Actions include JavaScript actions (document open, save, etc.), playing multimedia, executing a menu item, and so on.\nDevDepGS_FL | The extended graphic state of the document uses the FL key. The key is a number that indicates how much flatness tolerance should exist when drawing objects. Content may display differently from Acrobat to other applications.\nDevDepGS_TR | The document uses a PDF transfer function that interprets and replaces color. For example, it could replace black with white.\nDocHasCryptFilter | Some or all of the content is encrypted and the encryption method is not available in standard Acrobat installations. For example, the document may be protected by LiveCycle Policy Server. The document contains streams encrypted using the crypt filter.\nDocHasNonSigField | The document contains non-signature form fields. The visual appearance of such fields may change based on external variables.\nDocHasPresentation | Presentations are not allowed since a presentation may contain animations or other elements that may change document appearance or behavior.\nDocHasPSXObj | Visual elements may change based on external variables. For example, a logo may change color based on time or zoom level. No PostScript XObjects allowed.\nDocHasXFA | XFA-based (dynamic forms) documents are not allowed since such forms could alter the document\u2019s appearance or behavior.\nDynamicSigAP | The document contains signed signature fields that may change their visual appearance based on external variables.\nExternalOPIdicts | The document links to images not in the PDF file that are used as alternates. For example, an alternate, high resolution image might be specified for printing. Images and form XObject must not contain an OPI alternate version.\nExternalRefXObjects | Document links to images not in the PDF file. No external XObjects allowed.\nExternalStreams | Document contains external streams. The author has flagged some PDF bytes as a stream which may get data from an external source.\nGoTo3DViewActions | The document contains Go To 3D View actions that may be used to change the document\u2019s visual appearance through manipulating 3D views without the user\u2019s knowledge.\nGoToEHasF | The document links to external PDF documents on the Internet, file system, or network and it has no control over the nature of that linked content. Embedded Go To actions must not refer to external hierarchies.\nGoToRemoteAction | The document contains Go To actions that may link to external content.\nInvalidEOF | The PDF file contains extra bytes after the PDF\u2019s end of file marker.\nInvalidFileHeader | The PDF file contains extra bytes before the PDF\u2019s file header.\nJavaScriptActions | The document contains JavaScript actions that may be launched without the user\u2019s knowledge.\nLaunchActions | The document contains Launch File Attachment actions.\nMalformedContentStm | Malformed drawing instructions: Syntax error. The page content violates the grammar for page content definition. For example, the instruction might specify drawing a square but the syntax for doing it is incorrect.\nMovieActions | The document contains Launch Movie actions that may be launched without the user\u2019s knowledge.\nNonEmbeddedFonts | Document contains non-embedded fonts. When the document opens on a system that does not have the requisite fonts, Acrobat will replace them with some other font. Users should always turn on font-related warnings.\nOptionalContent | The content of the document is divided into layers that can be silently displayed or hidden on the fly.\nPageHasAA | A page contains hidden actions that may not be intended or known by the end user. Actions include JavaScript actions (document open, save, etc.), playing multimedia, executing a menu item, and so on.\nRenditionActions | The document contains rendition actions that may be used to launch movies without the user\u2019s knowledge.\nSetOCStateActions | The document contains SetOCState actions that may be used to change the document\u2019s visual appearance by modifying layers\u2019 visibility without the user\u2019s knowledge.\nSigFieldHasAA | A signature field contains actions that could be invoked by mouse over or other user interaction. Actions include JavaScript actions (document open, save, etc.), playing multimedia, executing a menu item, and so on.\nSigFieldHasAction | A signature field contains actions that could be invoked by clicking. Actions include JavaScript actions (document open, save, etc.), playing multimedia, executing a menu item, and so on.\nSoundActions | The document contains launch sound actions.\nTrueTypeFonts | This document uses TrueType fonts. TrueType and TrueType-based OpenType fonts are not allowed because they are programs and may change the document\u2019s appearance based on external variables. This restriction is not required by PDF/SigQ and is not reported unless the preference setting securityDigSigbTrueTypeFontPDFSigQWarn is set to 1.\nUnknownNamedAction | The document contains named actions that may launch menu items without the user\u2019s knowledge.\nUnknownPDFContent | Unrecognized PDF content: The document contains PDF content or custom content not supported by the current version of Acrobat. The document may have been created by a later version of Acrobat (PDF 1.8 or above).\nUnknownPDFContentStmOp | Unrecognized drawing operator: The document contains PDF content or custom content not supported by the current version of Acrobat. The document may have been created by a later version of Acrobat.\nURIActions | The document contains Launch URI actions that links to external content.\nXObjHasInterpolate | The document author has enabled image interpolation. No image interpolation is allowed."
}