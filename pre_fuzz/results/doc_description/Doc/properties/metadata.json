{
  "Object": "Doc",
  "API_Name": "metadata",
  "API_Type": "Properties",
  "API_Description": "Allows you to access the XMP metadata embedded in a PDF document. Returns a string containing the metadata as XML. For information on embedded XMP metadata, see the PDF Reference . **Exceptions** `RaiseError` is thrown if setting metadata to a string not in XMP format.",
  "Version_Key": "6.0",
  "Save_Prefs": "D",
  "Security": "No",
  "Product": "Not available in Reader",
  "Type": "String",
  "Access": "R/W",
  "Examples": [
    "Example 1: Try to create metadata not in XMP format.\n\n```\nthis.metadata = \"this is my metadata\";\nRaiseError: The given metadata was not in the XMP format\nGlobal.metadata:1:Console undefined:Exec\n ===> The given metadata was not in the XMP format\n```",
    "Example 2: Create a PDF report file with metadata from a document.\n\n```\nvar r = new Report();\nr.writeText(this.metadata);\nr.open(\"myMetadataReportFile\");\n```",
    "Example 3: (Acrobat 8.0) This example illustrates how to use E4X to change the metadata of the document. The script sets the Copyright Status, the Copyright Notice and the Copyright Info URL fields. The script can be executed from the console or as a batch sequence.\n\n```\nvar CopyrightStatus = \"True\";\n   var CopyrightNotice = \"Copyright(C) 2006, Example Systems, Inc.\"\n   var CopyrightInfoURL = \"http://www.example.com\"\n   var meta = this.metadata;\n   var myXMPData = new XML(meta);\n   myx = new Namespace(\"adobe:ns:meta/\");\n   myrdf = new Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n   mypdf = new Namespace(\"http://ns.adobe.com/pdf/1.3/\");\n   myxap = new Namespace(\"http://ns.adobe.com/xap/1.0/\");\n   mydc = new Namespace(\"http://purl.org/dc/elements/1.1/\");\n   myxapRights = new Namespace(\"http://ns.adobe.com/xap/1.0/rights/\");\n   var p = myXMPData.myrdf::RDF.myrdf::Description;\n   /*\n       We test whether this element has a value already, if no, we assign it a\n\n        value, otherwise we assign it another value.\n   */\n   if (p.mydc::rights.myrdf::Alt.myrdf::li.toString() == \"\") {\n       p[0] +=  <rdf:Description rdf:about=\"\"\n           xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n           xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n           <dc:rights>\n               <rdf:Alt>\n                   <rdf:li xml:lang=\"x-default\">\n                       {CopyrightNotice}\n                   </rdf:li>\n               </rdf:Alt>\n           </dc:rights>\n       </rdf:Description>\n   } else\n       p.mydc::rights.myrdf::Alt.myrdf::li = CopyrightNotice;\n/*\n   Some elements are converted into attributes, so we need to first test\n   whether the xapRights:Marked attribute is present, if not, we add it in as an\n   element; otherwise, if the attribute is present, we update the attribute.\n   Acrobat changes certain elements into attributes; the xapRights:Marked and\n   xapRights:WebStatement are two such examples, but dc:rights above is one\n   that is not changed into an attribute.\n*/\n   if (p.@myxapRights::Marked.toString() == \"\" ) {\n       p[0] +=  <rdf:Description rdf:about=\"\"\n           xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n           xmlns:xapRights=\"http://ns.adobe.com/xap/1.0/rights/\">\n           <xapRights:Marked>{CopyrightStatus}</xapRights:Marked>\n           <xapRights:WebStatement> {CopyrightInfoURL} </xapRights:WebStatement>\n       </rdf:Description>\n   } else {\n       p.@myxapRights::Marked = CopyrightStatus;\n       p.@myxapRights::WebStatement = CopyrightInfoURL;\n   }\n// Convert myXMPData into a string\n   myNewXMPStr=myXMPData.toXMLString();\n// and assign it to the document metadata\n   this.metadata = myNewXMPStr;\n```"
  ]
}